/**
 * @file
 * Binding Component implementation automatically generated by
 * the Social Communication Platform.
 *
 * Characteristics:
 * - Type: AMQP publisher.
 * - Social Communication Platform Bus: AMQP.
 */

var amqp = require('amqplib/callback_api');
var Message = require('scb-node-parser/message').Message;

/**
 * Sends a message to the Social Communication Platform Bus.
 * Protocol: AMQP.
 * @param {string} msg - The message to send.
 * @param {string} msg - The destination.
 */
exports.post = (msg, exchange) => {
    connection = process.env.RABBITMQ;
    console.log(connection);
    amqp.connect(connection, (err, conn) => {
        if (err) {
            console.log(err.stack);
        } else {

            connect(err, conn, msg, exchange);
        }
    });
};

function connect(err, conn, msg, destination) {

    conn.on('error', (err) => {
        console.log('An error occurred: ' + err.stack);
    });

    conn.createChannel((err, ch) => {
        ch.assertExchange(destination, 'fanout', {
            durable: true
        });
        message = msg;
        ch.publish(destination, '', new Buffer(JSON.stringify(message)));
        console.log(" [x] Sent message %s to %s", JSON.stringify(message), destination);
    });
}
